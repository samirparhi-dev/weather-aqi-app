
name: Security Suite for Containers (K8s & Containerization)

on:
  push:
    branches:
      - main
# on:
#   workflow_dispatch:

jobs:
  BuildingAndScanningAppImage:
    runs-on: ubuntu-latest

    steps:
    - name: Get current timestamp
      id: timestamp
      run: |
        echo "TIMESTAMP=$(date +'%Y-%m-%d_%H-%M-%S')" >> $GITHUB_ENV
        touch SignedImage-${{ env.TIMESTAMP }}.md

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Build React app
      run: npm run build


    - name: Build Docker image
      run: |
        echo $pwd
        ls
        docker build -t ghcr.io/${{ github.repository_owner }}/weather-aqi-app:latest .

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@0.20.0
      with:
        image-ref: 'ghcr.io/${{ github.repository_owner }}/weather-aqi-app:latest'
        format: 'json'
        output: 'trivy-report-${{ env.TIMESTAMP }}.json'
    
    - name: Uploading Trivy Report
      uses: actions/upload-artifact@v2
      with:
        name: trivy-report
        path: '${{ github.workspace }}/trivy-report*.json'
    
    - name: Log in to Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.CONTAINER_SEC }}

    - name: Install Cosign
      uses: sigstore/cosign-installer@v3.5.0

    - name: Check install!
      run: cosign version

    - name: Signing Your Container image
      run: |
        cosign sign --yes --payload ${{ github.workspace }}/SignedImage-${{ env.TIMESTAMP }}.md --key env://COSIGN_PRIVATE_KEY ghcr.io/${{ github.repository_owner }}/weather-aqi-app:latest
      env:
        COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}

    - name: Uploading Cosign Sign
      uses: actions/upload-artifact@v2
      with:
        name: Cosign-Sign
        path: '${{ github.workspace }}/SignedImage-*.md'

    - name: Create Custom Attestation for Siging
      run: |
        echo '{
          "build": {
            "builder": "GitHub Actions",
            "commit": "${{ github.sha }}"
          },
          "security": {
            "scanner": "Clair",
            "status": "clean"
          }
        }' > ${{ github.workspace }}/ImageAttestation.json

    - name: Uploading Attestation Json
      uses: actions/upload-artifact@v2
      with:
        name: Cosign-Attestation
        path: '${{ github.workspace }}/ImageAttestation.json'
  
    - name: Create Attestation for your Container Image
      run: |
        cosign attest --key ${{ secrets.COSIGN_PRIVATE_KEY }} --predicate-type ${{ github.workspace }}/ImageAttestation.json ghcr.io/${{ github.repository_owner }}/weather-aqi-app:latest

    - name: Push Container image to GitHub Container Registry
      run: |
        docker tag weather-aqi-app:latest ghcr.io/${{ github.repository_owner }}/weather-aqi-app:latest
        docker push ghcr.io/${{ github.repository_owner }}/weather-aqi-app:latest

